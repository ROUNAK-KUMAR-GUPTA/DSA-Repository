class Solution {
    public int findMin(int[] arr) {
        int low = 0, high = arr.length - 1;
        int ans = Integer.MAX_VALUE;
        while (low <= high) {
            int mid = (low + high) / 2;  

            // If left part is sorted:  
            if (arr[low] < arr[mid]) {  
                // Keep the minimum:
                ans = Math.min(ans, arr[low]);     
                // Eliminate left half:
                low = mid + 1; 
            } else if (arr[low] > arr[mid]) { // If right part is sorted:
                // Keep the minimum: 
                ans = Math.min(ans, arr[mid]);
                // Eliminate right half: 
                high = mid - 1;
            } else { // When arr[low] == arr[mid], we cannot determine which part is sorted 
                ans = Math.min(ans, arr[low]);
                low++;
            }
        }
        return ans;
    }
}
